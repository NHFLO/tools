[build-system]
requires = ["hatchling>=1.8.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/nhflotools/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github", "/.mypy_cache", "/.pytest_cache", "/.githooks",
  "sonar-project.properties"
]

[tool.hatch.build.targets.wheel]
packages = ["src/nhflotools"]

[tool.hatch.publish.index]
disable = true  # Requires confirmation when publishing to pypi.

[project]
name = "nhflotools"
description = "Tools that support the NHFLO modeling environment."
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.9, <3.12"
authors = [
  {name = "Bas des Tombe", email = "bas.des.tombe@pwn.nl"},
  {name = "Onno Ebbens", email = "o.ebbens@artesia-water.nl"},
  {name = "Davíd Brakenhoff", email = "d.brakenhoff@artesia-water.nl"},
]
maintainers = [
  {name = "Bas des Tombe", email = "bas.des.tombe@pwn.nl"},
  {name = "Onno Ebbens", email = "o.ebbens@artesia-water.nl"},
  {name = "Davíd Brakenhoff", email = "d.brakenhoff@artesia-water.nl"},
]
keywords = [
  "NHFLO",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
]
dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
    "pandas",
    "geopandas",
    "xarray",
    "nlmod",
    "flopy",
    "seaborn",
    "shapely",
    "tqdm",
    "pykrige"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "hatch",
    "ruff",
    "pytest"
]

[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.default.scripts]
lint = [
  "ruff check .",
]
format = [
  "ruff format .",
  "ruff check --fix ."
]
test = ["pytest ./src/ ./tests/",]  # --doctest-modules
fast-test = ["pytest ./tests/ -m \"not slow\"",]

[tool.hatch.envs.matrix_test]
features = ["dev"]

[[tool.hatch.envs.matrix_test.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.matrix_test.scripts]
test = ["pytest ./tests/",]  # --doctest-modules

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]